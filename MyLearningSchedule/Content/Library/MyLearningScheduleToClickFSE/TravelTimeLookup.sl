namespace: MyLearningScheduleToClickFSE
operation:
  name: TravelTimeLookup
  inputs:
    - filename_travelTimes
    - homeDepot
    - trainDepot
    - trainingTime
  python_action:
    use_jython: false
    script: "def execute(filename_travelTimes,homeDepot,trainDepot,trainingTime):\r\n    from datetime import datetime, timedelta\r\n    from openpyxl import load_workbook\r\n    import pandas as pd    \r\n    import re    \r\n    \r\n    pd_xl_file = pd.ExcelFile(filename_travelTimes)\r\n    df = pd_xl_file.parse(\"Sheet 1\")\r\n    count = df.shape\r\n    rowCount = count[0] + 2\r\n    \r\n    wb = load_workbook(filename=filename_travelTimes,read_only=False)\r\n    ws = wb.active  \r\n    \r\n    #homeDepot = re.sub(r'[^\\w\\s]','',homeDepot)        \r\n    #trainDepot = re.sub(r'[^\\w\\s]','',trainDepot)\r\n    \r\n    if trainDepot == \"Angle Park Training Services\" or trainDepot == \"A/Pk Trng Svcs\":\r\n        columnNum = \"B\"\r\n    elif trainDepot == \"Angaston\":\r\n        columnNum = \"C\"\r\n    elif trainDepot == \"Australian Driving Insitute \":\r\n        columnNum = \"D\"\r\n    elif trainDepot == \"Barmera\":\r\n        columnNum = \"E\"    \r\n    elif trainDepot == \"Cherry Gardens\":\r\n        columnNum = \"F\"\r\n    elif trainDepot == \"Cleve\":\r\n        columnNum = \"G\"        \r\n    elif trainDepot == \"Davenport\":\r\n        columnNum = \"H\"    \r\n    elif trainDepot == \"Elizabeth\":\r\n        columnNum = \"I\" \r\n    elif trainDepot == \"Holden Hill\":\r\n        columnNum = \"J\" \r\n    elif trainDepot == \"Marleston South\":\r\n        columnNum = \"K\" \r\n    elif trainDepot == \"Mawson Lakes - Business SA\":\r\n        columnNum = \"L\" \r\n    elif trainDepot == \"Mt Gambier\" or trainDepot == \"Mt. Gambier\":\r\n        columnNum = \"M\" \r\n    elif trainDepot == \"Mt Barker\" or trainDepot == \"Mt. Barker\":\r\n        columnNum = \"N\" \r\n    elif trainDepot == \"Naracoorte\":\r\n        columnNum = \"O\"      \r\n    elif trainDepot == \"Nuriootpa\":\r\n        columnNum = \"P\"     \r\n    elif trainDepot == \"Pt Augusta\" or trainDepot == \"Pt. Augusta\":\r\n        columnNum = \"Q\" \r\n    elif trainDepot == \"Pt Pirie\" or trainDepot == \"Pt. Pirie\":\r\n        columnNum = \"R\"   \r\n    elif trainDepot == \"Pt Lincoln\" or trainDepot == \"Pt. Lincoln\":\r\n        columnNum = \"S\"          \r\n    elif trainDepot == \"Regency Park - Adelaide Truck Training Centre\":\r\n        columnNum = \"T\"        \r\n    elif trainDepot == 'Regency Park - \"CITC\"':\r\n        columnNum = \"U\"   \r\n    elif trainDepot == \"St Marys\":\r\n        columnNum = \"V\"           \r\n    elif trainDepot == \"Station Place\":\r\n        columnNum = \"W\"        \r\n    elif trainDepot == \"Streaky Bay\":\r\n        columnNum = \"X\"   \r\n    elif trainDepot == \"Wingfield\":\r\n        columnNum = \"Y\"   \r\n\r\n    if trainDepot == \"On Site\":\r\n        trainDepot = homeDepot\r\n\r\n    trainingTravelDates1 = []\r\n    if homeDepot == trainDepot:\r\n        trainingTravelDates = trainingTime\r\n    else:\r\n        travel = None\r\n        \r\n        for depot in range(1,rowCount):\r\n            homeLocation = ws[\"A\"+str(depot)].value\r\n            if homeLocation == homeDepot:\r\n                travel = ws[columnNum+str(depot)].value\r\n                break\r\n        \r\n        if travel == None:\r\n            travel = 0\r\n    \r\n        if travel > 60:\r\n            travelHours = travel / 60\r\n            travelHours1 = str(travelHours)\r\n            if travelHours1.find(\".\"):\r\n                travelHours1 = travelHours1.split(\".\")\r\n                travelHours1 = int(travelHours1[0])\r\n                travelHours = travelHours1\r\n            travelMinutes = travel - (travelHours * 60)\r\n        else:\r\n            travelHours = 0\r\n            travelMinutes = travel\r\n    \r\n        if \",\" in trainingTime:\r\n            trainingTime = trainingTime.split(\",\")\r\n            for x in trainingTime:\r\n                startTrain,finishTrain = x.split(\"/\")\r\n    \r\n                #get travel to time\r\n                startDate,startTime = startTrain.split(\"T\")       \r\n                startTime = datetime.strptime(startTime, \"%H:%M:%S\")\r\n                travelToTime = startTime - timedelta(hours=travelHours,minutes=travelMinutes)\r\n                travelToTime = format(travelToTime, '%H:%M:%S')\r\n    \r\n                #get travel from time\r\n                finishDate,finishTime = finishTrain.split(\"T\")\r\n                finishTime = datetime.strptime(finishTime, \"%H:%M:%S\")\r\n                travelFromTime = finishTime + timedelta(hours=travelHours,minutes=travelMinutes)\r\n                travelFromTime = format(travelFromTime, '%H:%M:%S')\r\n    \r\n                #append new times \r\n                travelTo = startDate+\"T\"+travelToTime\r\n                travelFrom = finishDate+\"T\"+travelFromTime\r\n                travelInclusiveTimes = travelTo+\"/\"+travelFrom\r\n                trainingTravelDates1.append(travelInclusiveTimes)\r\n    \r\n                trainingTimes = \"\"\r\n                for x in trainingTravelDates1:\r\n                    training = x\r\n                    trainingTimes = trainingTimes +\",\" +training\r\n                trainingTravelDates = trainingTimes.replace(\",\",\"\",1)\r\n        else:\r\n            startTrain,finishTrain = trainingTime.split(\"/\")\r\n    \r\n            #get travel to time\r\n            startDate,startTime = startTrain.split(\"T\")       \r\n            startTime = datetime.strptime(startTime, \"%H:%M:%S\")\r\n            travelToTime = startTime - timedelta(hours=travelHours,minutes=travelMinutes)\r\n            travelToTime = format(travelToTime, '%H:%M:%S')\r\n    \r\n            #get travel from time\r\n            finishDate,finishTime = finishTrain.split(\"T\")\r\n            finishTime = datetime.strptime(finishTime, \"%H:%M:%S\")\r\n            travelFromTime = finishTime + timedelta(hours=travelHours,minutes=travelMinutes)\r\n            travelFromTime = format(travelFromTime, '%H:%M:%S')\r\n    \r\n            #append new times \r\n            travelTo = startDate+\"T\"+travelToTime\r\n            travelFrom = finishDate+\"T\"+travelFromTime\r\n            travelInclusiveTimes = travelTo+\"/\"+travelFrom\r\n            trainingTravelDates1.append(travelInclusiveTimes)\r\n    \r\n            trainingTimes = \"\"\r\n            for x in trainingTravelDates1:\r\n                training = x\r\n                trainingTimes = trainingTimes +\",\" +training\r\n            trainingTravelDates = trainingTimes.replace(\",\",\"\",1)        \r\n\r\n    wb.save(filename_travelTimes)\r\n    wb.close()\r\n\r\n    return{\"trainingTravelDates\":trainingTravelDates}"
  outputs:
    - trainingTravelDates
  results:
    - SUCCESS
