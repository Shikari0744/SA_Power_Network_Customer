namespace: AEMOSnapshotsToOracle
operation:
  name: CreateLogOfCommands
  inputs:
    - filepath
    - tbcPath
    - csvFile
    - loopCounter
  python_action:
    use_jython: false
    script: "def execute(filepath,tbcPath,csvFile,loopCounter):\n    import os\n    import csv\n    from datetime import datetime, timedelta\n    import json\n    import re\n    import ast\n    import shutil\n\n    direc = os.listdir(filepath)\n    rowData = \"\"\n    maxX = 1000\n    querie = \"\"\n    lines = 0\n\n    def convertTimeToAdelaide(timestamp):\n        date = timestamp.replace(\"+10:00\",\"\")\n        date = date.replace(\"T\",\" \")\n        tempDate = datetime.strptime(date, \"%Y-%m-%d %H:%M:%S\")\n        adelaideTime = tempDate - timedelta(minutes=30)\n        tempDate = str(adelaideTime)\n        adelaideTime = \"TO_DATE('\"+tempDate+\"','YYYY-MM-DD HH24:MI:SS')\"\n        return adelaideTime\n    \n    def convertDateFormat(datestamp):\n        if \"/\" in datestamp:\n            tempDate = datetime.strptime(datestamp, \"%d/%m/%Y\")\n            adelaideDate = datetime.strftime(tempDate, \"%Y-%m-%d\")\n            tempDate = str(adelaideDate)\n        else:\n            tempDate = datestamp\n        adelaideDate = \"TO_DATE('\"+tempDate+\"','YYYY-MM-DD')\"\n        return adelaideDate\n        \n    def prepString(string):\n        string = string.replace(\"\\n\", \" \")\n        string = string.replace(\"{\", \"\")\n        string = string.replace(\"}\", \"\")  \n        string = string.replace(\"[\", \"\")\n        string = string.replace(\"]\", \"\")                   \n        string = string.replace('\"','')\n        string = string.replace(\"'\",'')      \n        string = string.replace(\",\",'')      \n        string = string.replace(\".\",'')                              \n        return string           \n    \n    def convertAddressFormat(address):\n        if 'UnstructuredAddress' in address.keys():\n            suburb = address['SuburbOrPlaceOrLocality']\n            state = address['StateOrTerritory']\n            postcode = address['PostCode']\n            unstruct = address['UnstructuredAddress']\n            addressLine = unstruct['AddressLine']\n            addressL = \"\"\n            for x in range(len(addressLine)):\n                addressL = addressL + addressLine[x] + \" \"\n            address = addressL + \" \" + suburb + \" \" + state + \" \" + postcode\n        elif 'StructuredAddress' in address.keys():\n            suburb = address['SuburbOrPlaceOrLocality']\n            state = address['StateOrTerritory']\n            postcode = address['PostCode']\n            struct = address['StructuredAddress']\n            address1 = \"\"\n            if struct != \"None\" and struct is not None:\n                if \"FlatOrUnit\" in struct:\n                    flat = struct['FlatOrUnit']\n                    if \"FlatOrUnitType\" in flat:\n                        flatType = flat['FlatOrUnitType']\n                        address1 = address1 + \" Type: \" + flatType\n                    if \"FlatOrUnitNumber\" in flat:\n                        flatNumber = flat['FlatOrUnitNumber']\n                        address1 = address1 + \" F-\" + flatNumber\n                if \"BuildingOrPropertyName\" in struct:\n                    building = struct['BuildingOrPropertyName']\n                    address1 = address1 + \" Building: \" + building\n                if \"LocationDescriptor\" in struct:\n                    locationDesc = struct['LocationDescriptor']\n                    address1 = address1 + \" Description: \" + locationDesc\n                if \"Lot\" in struct:\n                    lot = struct['Lot']\n                    if \"LotNumber\" in lot:\n                        lotNumber = lot['LotNumber']\n                        address1 = address1 + \" L-\" + lotNumber\n                if \"House\" in struct:\n                    house = struct['House']\n                    if \"HouseNumber\" in house:\n                        houseNumber = house['HouseNumber']\n                        address1 = address1 + \" H-\" + houseNumber\n                if \"Street\" in struct:\n                    street = struct['Street']\n                    if \"StreetName\" in street:\n                        streetName = street['StreetName']\n                        address1 = address1 + \" \" + streetName\n                    if \"StreetType\" in street:\n                        streetType = street['StreetType']\n                        address1 = address1 + \" \" + streetType\n            address = address1 + \" \" + suburb + \" \" + state + \" \" + postcode\n        address = address.upper()\n        return address.strip()\n    \n    with open(filepath+csvFile) as fileObject:\n        heading = next(fileObject)\n        reader_obj = csv.reader(fileObject)\n        x = 0\n        \n        if os.path.exists(tbcPath):\n            shutil.rmtree(tbcPath)\n        os.mkdir(tbcPath)\n        \n        for row in reader_obj:\n            if row != \"\":\n                if \"_CMR_\" in csvFile:\n                    table = \"cats_meter_register\"\n                    sequenceNo = row[2]\n                    creationDate = convertTimeToAdelaide(row[3])\n                    maintenanceDate = convertTimeToAdelaide(row[4])\n                    rowStatus = row[5]\n                    fromDate = convertTimeToAdelaide(row[6])\n                    toDate = convertTimeToAdelaide(row[7])\n                    nmi = row[8]\n                    serial = row[9]\n                    if row[10] != \"\":\n                        installationType = \"'\"+row[10]+\"'\"\n                    else:\n                        installationType = \"null\"\n                    if row[11] != \"\":\n                        transformerType = \"'\"+row[11]+\"'\"\n                    else:\n                        transformerType = \"null\"\n                    if row[12] != \"\":\n                        transformerRatio = \"'\"+row[12]+\"'\"\n                    else:\n                        transformerRatio = \"null\"\n                    status = row[13]\n                    if row[14] != \"\":\n                        nextReadDate = convertDateFormat(row[14])\n                    else:\n                        nextReadDate = \"null\"\n                    if row[15] != \"\":\n                        route = \"'\"+row[15]+\"'\"\n                    else:\n                        route = \"null\"\n                    if row[16] != \"\":\n                        manufacturer = \"'\"+row[16]+\"'\"\n                    else:\n                        manufacturer = \"null\"\n                    if row[17] != \"\":\n                        model = \"'\"+row[17]+\"'\"\n                    else:\n                        model = \"null\"\n                    if row[18] != \"\":\n                        transformerLocation = \"'\"+row[18]+\"'\"\n                    else:\n                        transformerLocation = \"null\"\n                    if row[19] != \"\":\n                        constant = \"'\"+row[19]+\"'\"\n                    else:\n                        constant = \"null\"\n                    if row[20] != \"\":\n                        hazard = \"'\"+row[20]+\"'\"\n                    else:\n                        hazard = \"null\"\n                    if row[21] != \"\":\n                        if row[21] != \".\":\n                            additionalInfo = row[21]\n                            additionalInfo = prepString(additionalInfo)\n                            additionalInfo = \"'\"+additionalInfo+\"'\"\n                        else:  \n                            additionalInfo = \"null\"\n                    else:\n                        additionalInfo = \"null\"\n                    if row[22] != \"\":\n                        location = row[22]\n                        location = prepString(location)\n                        location = \"'\"+location+\"'\"\n                    else:\n                        location = \"null\"\n                    if row[23] != \"\":\n                        use = \"'\"+row[23]+\"'\"\n                    else:\n                        use = \"null\"\n                    if row[24] != \"\":\n                        point = \"'\"+row[24]+\"'\"\n                    else:\n                        point = \"null\"\n                    if row[25] != \"\":\n                        readTypeCode = \"'\"+row[25]+\"'\"\n                    else:\n                        readTypeCode = \"null\"\n                    if row[26] != \"\":\n                        commsProtocol = \"'\"+row[26]+\"'\"\n                    else:\n                        commsProtocol = \"null\"\n                    if row[27] != \"\":\n                        program = \"'\"+row[27]+\"'\"\n                    else:\n                        program = \"null\"\n                    if row[28] != \"\":\n                        remotePhoneNo = \"'\"+row[28]+\"'\"\n                    else:\n                        remotePhoneNo = \"null\"\n                    if row[29] != \"\":\n                        commsEquipmentType = row[29]\n                    else:\n                        commsEquipmentType = \"null\"\n                    if row[30] != \"\":\n                        measurementType = \"'\"+row[30]+\"'\"\n                    else:\n                        measurementType = \"null\"\n                    if row[31] != \"\":\n                        lastTestDate = convertDateFormat(row[31])\n                    else:\n                        lastTestDate = \"null\"\n                    if row[32] != \"\":\n                        testPerformedBy = \"'\"+row[32]+\"'\"\n                    else:\n                        testPerformedBy = \"null\"\n                    if row[33] != \"\":\n                        dataValidations = \"'\"+row[33]+\"'\"\n                    else:\n                        dataValidations = \"null\"\n                    if row[34] != \"\":\n                        estimationInstruct = \"'\"+row[34]+\"'\"\n                    else:\n                        estimationInstruct = \"null\"\n                    if row[35] != \"\":\n                        assetManagePlan = \"'\"+row[35]+\"'\"\n                    else:\n                        assetManagePlan = \"null\"\n                    if row[36] != \"\":\n                        password = \"'\"+row[36]+\"'\"\n                    else:\n                        password = \"null\"\n                    if row[37] != \"\":\n                        testResultAccuracy = row[37]\n                    else:\n                        testResultAccuracy = \"null\"\n                    if row[38] != \"\":\n                        testCalibrationProgram = \"'\"+row[38]+\"'\"\n                    else:\n                        testCalibrationProgram = \"null\"\n                    if row[39] != \"\":\n                        dataConversion = row[39]\n                    else:\n                        dataConversion = \"null\"\n                    if row[40] != \"\":\n                        testResultNotes = \"'\"+row[40]+\"'\"\n                    else:\n                        testResultNotes = \"null\"\n                    if row[41] != \"\":\n                        nextTestDate = convertDateFormat(row[41])\n                    else:\n                        nextTestDate = \"null\"\n                    column = \"SEQUENCE_NUMBER, CREATION_DATE, MAINTENANCE_DATE, ROW_STATUS, FROM_DATE, TO_DATE, NMI, SERIAL_NUMBER, INSTALLATION_TYPE_CODE, TRANSFORMER_TYPE, TRANSFORMER_RATIO, STATUS, NEXT_SCHEDULED_READ_DATE, ROUTE, MANUFACTURER, METER_MODEL, TRANSFORMER_LOCATION, METER_CONSTANT, HAZARD, ADDITIONAL_SITE_INFORMATION, LOCATION, USE, POINT, READ_TYPE_CODE, COMMUNICATIONS_PROTOCOL, PROGRAM, REMOTE_PHONE_NUMBER, COMMUNICATIONS_EQUIPMENT_TYPE, MEASUREMENT_TYPE, LAST_TEST_DATE, TEST_PERFORMED_BY, DATA_VALIDATIONS, ESTIMATION_INSTRUCTIONS, ASSET_MANAGEMENT_PLAN, PASSWORD, TEST_RESULT_ACCURACY, TEST_CALIBRATION_PROGRAM, DATA_CONVERSION, TEST_RESULT_NOTES, NEXT_TEST_DATE\"\n                    rowData = sequenceNo+\",\"+creationDate+\",\"+maintenanceDate+\",'\"+rowStatus+\"',\"+fromDate+\",\"+toDate+\",'\"+nmi+\"','\"+serial+\"',\"+installationType+\",\"+transformerType+\",\"+transformerRatio+\",'\"+status+\"',\"+nextReadDate+\",\"+route+\",\"+manufacturer+\",\"+model+\",\"+transformerLocation+\",\"+constant+\",\"+hazard+\",\"+additionalInfo+\",\"+location+\",\"+use+\",\"+point+\",\"+readTypeCode+\",\"+commsProtocol+\",\"+program+\",\"+remotePhoneNo+\",\"+commsEquipmentType+\",\"+measurementType+\",\"+lastTestDate+\",\"+testPerformedBy+\",\"+dataValidations+\",\"+estimationInstruct+\",\"+assetManagePlan+\",\"+password+\",\"+testResultAccuracy+\",\"+testCalibrationProgram+\",\"+dataConversion+\",\"+testResultNotes+\",\"+nextTestDate\n                    tempQuerie = \"INTO \"+table+\" (\"+column+\") VALUES (\"+rowData+\") \"\n                    querie = querie + tempQuerie\n                    rowData = \"\"\n                    tempQuerie = \"\"\n                elif \"_CND_\" in csvFile:\n                    table = \"cats_nmi_data\"\n                    sequenceNo = row[2]\n                    creationDate = convertTimeToAdelaide(row[3])\n                    maintenanceDate = convertTimeToAdelaide(row[4])\n                    rowStatus = row[5]\n                    fromDate = convertTimeToAdelaide(row[6])\n                    toDate = convertTimeToAdelaide(row[7])\n                    nmi = row[8]\n                    if row[9] != \"\":\n                        jurisdictionCode = \"'\"+row[9]+\"'\"\n                    else:\n                        jurisdictionCode = \"null\"\n                    if row[10] != \"\":\n                        nmiClassCode = \"'\"+row[10]+\"'\"\n                    else:\n                        nmiClassCode = \"null\"\n                    if row[11] != \"\":\n                        transmissionNodeID = \"'\"+row[11]+\"'\"\n                    else:\n                        transmissionNodeID = \"null\"\n                    if row[12] != \"\":\n                        distributionlossFactor = \"'\"+row[12]+\"'\"\n                    else:\n                        distributionlossFactor = \"null\"\n                    if row[13] != \"\":\n                        if \"None\" not in row[13]:\n                            address = ast.literal_eval(row[13])\n                            address = convertAddressFormat(address) \n                            address = \"'\"+address+\"'\"\n                        else:\n                            address = \"null\"\n                    else:\n                        address = \"null\"\n                    if row[14] != \"\":\n                        aggregate = \"'\"+row[14]+\"'\"\n                    else:\n                        aggregate = \"null\"\n                    if row[15] != \"\":\n                        status = \"'\"+row[15]+\"'\"\n                    else:\n                        status = \"null\"\n                    if row[16] != \"\":\n                        customerClassification = \"'\"+row[16]+\"'\"\n                    else:\n                        customerClassification = \"null\"\n                    if row[17] != \"\":\n                        customerThreshold = \"'\"+row[17]+\"'\"\n                    else:\n                        customerThreshold = \"null\"\n                    if row[18] != \"\":\n                        sharedIsoPointFlag = \"'\"+row[18]+\"'\"\n                    else:\n                        sharedIsoPointFlag = \"null\"\n                    if row[19] != \"\":\n                        parentEmbeddedID = \"'\"+row[19]+\"'\"\n                    else:\n                        parentEmbeddedID = \"null\"\n                    column = \"SEQUENCE_NUMBER, CREATION_DATE, MAINTENANCE_DATE, ROW_STATUS, FROM_DATE, TO_DATE, NMI, JUSIRDICTION_CODE, NMI_CLASS_CODE, TRANSMISSION_NODE_IDENTIFIER, DISTRIBUTION_LOSS_FACTOR_CODE, ADDRESS, AGGREGATE, STATUS, CUSTOMER_CLASSIFICATION_CODE, CUSTOMER_THRESHOLD_CODE, SHARED_ISOLATION_FLAG, PARENT_EMBEDDED_NETWORK_ID\"\n                    rowData = sequenceNo+\",\"+creationDate+\",\"+maintenanceDate+\",'\"+rowStatus+\"',\"+fromDate+\",\"+toDate+\",'\"+nmi+\"',\"+jurisdictionCode+\",\"+nmiClassCode+\",\"+transmissionNodeID+\",\"+distributionlossFactor+\",\"+address+\",\"+aggregate+\",\"+status+\",\"+customerClassification+\",\"+customerThreshold+\",\"+sharedIsoPointFlag+\",\"+parentEmbeddedID\n                    tempQuerie = \"INTO \"+table+\" (\"+column+\") VALUES (\"+rowData+\") \"\n                    querie = querie + tempQuerie\n                    rowData = \"\"\n                    tempQuerie = \"\"\n                elif \"_CNDS_\" in csvFile:\n                    table = \"cats_nmi_data_stream\"\n                    sequenceNo = row[2]\n                    creationDate = convertTimeToAdelaide(row[3])\n                    maintenanceDate = convertTimeToAdelaide(row[4])\n                    rowStatus = row[5]\n                    fromDate = convertTimeToAdelaide(row[6])\n                    toDate = convertTimeToAdelaide(row[7])\n                    nmi = row[8]\n                    suffix = row[9]\n                    profileName = row[10]\n                    if row[11] != \"\":\n                        averageDailyLoad = row[11]\n                    else:\n                        averageDailyLoad = \"null\"\n                    if row[12] != \"\":\n                        dataStreamType = \"'\"+row[12]+\"'\"\n                    else:\n                        dataStreamType = \"null\"\n                    status = row[13]\n                    column = \"SEQUENCE_NUMBER, CREATION_DATE, MAINTENANCE_DATE, ROW_STATUS, FROM_DATE, TO_DATE, NMI, SUFFIX, PROFILE_NAME, AVERAGED_DAILY_LOAD, DATA_STREAM_TYPE, STATUS\"\n                    rowData = sequenceNo+\",\"+creationDate+\",\"+maintenanceDate+\",'\"+rowStatus+\"',\"+fromDate+\",\"+toDate+\",'\"+nmi+\"','\"+suffix+\"','\"+profileName+\"',\"+averageDailyLoad+\",\"+dataStreamType+\",'\"+status+\"'\"\n                    tempQuerie = \"INTO \"+table+\" (\"+column+\") VALUES (\"+rowData+\") \"\n                    querie = querie + tempQuerie\n                    rowData = \"\"\n                    tempQuerie = \"\"\n                elif \"_CNPR_\" in csvFile:\n                    table = \"cats_nmi_participant_relations\"\n                    sequenceNo = row[2]\n                    creationDate = convertTimeToAdelaide(row[3])\n                    maintenanceDate = convertTimeToAdelaide(row[4])\n                    rowStatus = row[5]\n                    fromDate = convertTimeToAdelaide(row[6])\n                    toDate = convertTimeToAdelaide(row[7])\n                    nmi = row[8]\n                    party = row[9]\n                    role = row[10]\n                    column = \"SEQUENCE_NUMBER, CREATION_DATE, MAINTENANCE_DATE, ROW_STATUS, FROM_DATE, TO_DATE, NMI, PARTY, ROLE\"\n                    rowData = sequenceNo+\",\"+creationDate+\",\"+maintenanceDate+\",'\"+rowStatus+\"',\"+fromDate+\",\"+toDate+\",'\"+nmi+\"','\"+party+\"','\"+role+\"'\"\n                    tempQuerie = \"INTO \"+table+\" (\"+column+\") VALUES (\"+rowData+\") \"\n                    querie = querie + tempQuerie\n                    rowData = \"\"\n                    tempQuerie = \"\"\n                elif \"_CRI_\" in csvFile:\n                    table = \"cats_register_identifier\"\n                    sequenceNo = row[2]\n                    creationDate = convertTimeToAdelaide(row[3])\n                    maintenanceDate = convertTimeToAdelaide(row[4])\n                    rowStatus = row[5]\n                    fromDate = convertTimeToAdelaide(row[6])\n                    toDate = convertTimeToAdelaide(row[7])\n                    nmi = row[8]\n                    serial = row[9]\n                    registerID = row[10]\n                    if row[11] != \"\":\n                        unitOfMeasure = \"'\"+row[11]+\"'\"\n                    else:\n                        unitOfMeasure = \"null\"\n                    if row[12] != \"\":\n                        timeOfDay = \"'\"+row[12]+\"'\"\n                    else:\n                        timeOfDay = \"null\"\n                    if row[13] != \"\":\n                        multiplier = row[13]\n                    else:\n                        multiplier = \"null\"\n                    if row[14] != \"\":\n                        dialFormat = \"'\"+row[14]+\"'\"\n                    else:\n                        dialFormat = \"null\"   \n                    if row[15] != \"\":\n                        suffix = \"'\"+row[15]+\"'\"\n                    else:\n                        suffix = \"null\"\n                    if row[16] != \"\":\n                        if row[16] == \"NONE\":\n                            controlledLoad = \"'NIL'\"\n                        elif \"CONTROLLED\" in row[16]:\n                            controlledLoad = \"'YES'\"                                        \n                        else:\n                            controlledLoad = \"'\"+row[16]+\"'\"\n                    else:\n                        controlledLoad = \"null\"\n                    if row[17] != \"\":\n                        consumptionType = \"'\"+row[17]+\"'\"\n                    else:\n                        consumptionType = \"null\"\n                    if row[18] != \"\":\n                        status = \"'\"+row[18]+\"'\"\n                    else:\n                        status = \"null\"\n                    if row[19] != \"\":\n                        networkTariffCode = \"'\"+row[19]+\"'\"\n                    else:\n                        networkTariffCode = \"null\"\n                    if row[20] != \"\":\n                        networkInfo = \"'\"+row[20]+\"'\"\n                    else:\n                        networkInfo = \"null\"\n                    if row[21] != \"\":\n                        demand1 = row[21]\n                    else:\n                        demand1 = \"null\"\n                    if row[22] != \"\":\n                        demand2 = row[22]\n                    else:\n                        demand2 = \"null\"\n                    column = \"SEQUENCE_NUMBER, CREATION_DATE, MAINTENANCE_DATE, ROW_STATUS, FROM_DATE, TO_DATE, NMI, SERIAL_NUMBER, REGISTER_ID, UNIT_OF_MEASURE, TIME_OF_DAY, MULTIPLIER, DIAL_FORMAT, SUFFIX, CONTROLLED_LOAD, CONSUMPTION_TYPE, STATUS, NETWORK_TARIFF_CODE, NETWORK_ADDITIONAL_INFORMATION, DEMAND_1, DEMAND_2\"\n                    rowData = sequenceNo+\",\"+creationDate+\",\"+maintenanceDate+\",'\"+rowStatus+\"',\"+fromDate+\",\"+toDate+\",'\"+nmi+\"','\"+serial+\"','\"+registerID+\"',\"+unitOfMeasure+\",\"+timeOfDay+\",\"+multiplier+\",\"+dialFormat+\",\"+suffix+\",\"+controlledLoad+\",\"+consumptionType+\",\"+status+\",\"+networkTariffCode+\",\"+networkInfo+\",\"+demand1+\",\"+demand2\n                    tempQuerie = \"INTO \"+table+\" (\"+column+\") VALUES (\"+rowData+\") \"\n                    querie = querie + tempQuerie\n                    rowData = \"\"\n                    tempQuerie = \"\"\n                x = x + 1\n                if \"&\" in querie:\n                    querie = querie.replace(\"&\",\"and\")                            \n                if x == maxX:\n                    fullQuerie = \"INSERT ALL \"+querie+\"SELECT 1 FROM DUAL\"\n                    #f = open(tbcLog, \"a\")\n                    f = open(tbcPath + str(lines) + \".txt\", \"w\")\n                    f.write(\"\\n\"+fullQuerie)\n                    f.close()\n                    x = 0\n                    lines = lines + 1\n                    fullQuerie = \"\"\n                    querie = \"\"\n\n    if querie != \"\":\n        fullQuerie = \"INSERT ALL \"+querie+\"SELECT 1 FROM DUAL\"\n        #f = open(tbcLog, \"a\")\n        f = open(tbcPath + str(lines) + \".txt\", \"w\")\n        f.write(\"\\n\"+fullQuerie)\n        f.close()\n        x = 0\n        lines = lines + 1\n        fullQuerie = \"\"\n        querie = \"\"\n\n    y = 0\n    loopCount = loopCounter\n    while y < (lines - 1):\n        y = y + 1\n        loopCount = loopCount + \",\" + str(y)\n        \n    lines = lines\n\n    return{\"loopCount\":loopCount,\"lines\":lines}"
  outputs:
    - loopCount
    - lines
  results:
    - SUCCESS
