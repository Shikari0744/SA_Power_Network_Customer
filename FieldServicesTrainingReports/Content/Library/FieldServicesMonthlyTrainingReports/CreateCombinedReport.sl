namespace: FieldServicesMonthlyTrainingReports
operation:
  name: CreateCombinedReport
  inputs:
    - groupSplits
    - fileLocation
    - fs_certification
    - fs_curricula
    - ss_certification
    - ss_curricula
    - reportDate
  python_action:
    use_jython: false
    script: "def execute(groupSplits, fileLocation, fs_certification, fs_curricula, ss_certification, ss_curricula, reportDate):\r\n    from re import X\r\n    import pandas as pd\r\n    import os\r\n    from openpyxl import load_workbook\r\n    from openpyxl.styles import Font, Border, Side, NamedStyle, PatternFill\r\n    from datetime import date\r\n\r\n    groupSplitWB = load_workbook(filename=groupSplits, read_only=True)\r\n    groupSplitWS = groupSplitWB.active\r\n    rowCount = groupSplitWS.max_row + 1\r\n\r\n    for row in range(1, rowCount):\r\n        reportDone = groupSplitWS[\"K\"+str(row)].value\r\n        if reportDone == None:\r\n            reportName = groupSplitWS[\"A\"+str(row)].value\r\n            orgUnit = groupSplitWS[\"B\"+str(row)].value\r\n            orgUnit5 = groupSplitWS[\"C\"+str(row)].value\r\n            manager = groupSplitWS[\"D\"+str(row)].value\r\n            organisationName = groupSplitWS[\"E\"+str(row)].value\r\n            location = groupSplitWS[\"F\"+str(row)].value\r\n            managerMainFilter = groupSplitWS[\"G\"+str(row)].value\r\n            person = groupSplitWS[\"H\"+str(row)].value\r\n            folder = groupSplitWS[\"I\"+str(row)].value\r\n            report = groupSplitWS[\"J\"+str(row)].value\r\n            break\r\n    groupSplitWB.close()\r\n\r\n    if reportName != None:\r\n        if not orgUnit5 and not manager:\r\n            firstFilter = \"\"\r\n            firstFilterComparer = \"\"\r\n        elif not orgUnit5:\r\n            firstFilter = manager\r\n            firstFilterComparer = \"manager\"\r\n        elif not manager:\r\n            firstFilter = orgUnit5\r\n            firstFilterComparer = \"orgUnit\"\r\n            \r\n        secondFilter = organisationName\r\n            \r\n        if not location and not managerMainFilter and not person:\r\n            thirdFilter = \"\"\r\n            thirdFilterComparer = \"\"\r\n        elif not location and not person:\r\n            thirdFilter = managerMainFilter\r\n            thirdFilterComparer = \"manager\"\r\n        elif not managerMainFilter and not person:\r\n            thirdFilter = location\r\n            thirdFilterComparer = \"location\"\r\n        elif not location and not managerMainFilter:\r\n            thirdFilter = person\r\n            thirdFilterComparer = \"person\"\r\n            \r\n        orgUnit = orgUnit.split(\"|\")\r\n        firstFilter = firstFilter.split(\"|\")\r\n        secondFilter = secondFilter.split(\"|\")\r\n        thirdFilter = thirdFilter.split(\"|\")\r\n        \r\n        orgColumn = \"Person Org Unit - Level 04\"\r\n        if firstFilterComparer == \"manager\":\r\n            firstColumn = \"Manager Full Name\"\r\n        elif firstFilterComparer == \"orgUnit\":\r\n            firstColumn = \"Person Org Unit - Level 05\"\r\n            secondColumn = \"Person Organisation Name\"\r\n        if thirdFilterComparer == \"manager\":\r\n            thirdColumn = \"Manager Full Name\"\r\n        elif thirdFilterComparer == \"location\":\r\n            thirdColumn = \"Person Location Name\"\r\n        elif thirdFilterComparer == \"person\":\r\n            thirdColumn = \"Person Full Name\"\r\n            \r\n        sheetNames = [\"Certification\", \"Curricula\"]\r\n        \r\n        if report == \"fs\":\r\n            reports = [fs_certification, fs_curricula]\r\n        elif report == \"out\":\r\n            reports = [ss_certification, ss_curricula]\r\n        elif report == \"fs|out\":\r\n            reports = [fs_certification, fs_curricula, ss_certification, ss_curricula]\r\n            \r\n        o = 0\r\n        for file in reports:\r\n            if o == 2:\r\n                o = 0\r\n            df = pd.read_excel(file, sheet_name=0)\r\n            # first filter not empty, second filter empty, third filter empty\r\n            if firstFilter[0] != \"\" and secondFilter[0] == \"\" and (thirdFilter[0] == \"\" or thirdFilter[0] == \",\"):\r\n                df1 = df[(df[orgColumn]==orgUnit[0]) & (df[firstColumn]==firstFilter[0])]   \r\n            #first filter empty, second filter not empty, third filter not empty\r\n            elif firstFilter[0] == \"\" and secondFilter[0] != \"\" and thirdFilter[0] != \"\":\r\n                df1 = df[(df[orgColumn]==orgUnit[0]) & (df[secondColumn]==secondFilter[0]) & (df[thirdColumn]==thirdFilter[0])]\r\n            #first filter not empty, second filter empty, third filter not empty\r\n            elif firstFilter[0] != \"\" and secondFilter[0] == \"\" and thirdFilter[0] != \"\":\r\n                df1 = df[(df[orgColumn]==orgUnit[0]) & (df[firstColumn]==firstFilter[0]) & (df[thirdColumn]==thirdFilter[0])]             \r\n            #first filter not empty, second filter not empty, third filter empty\r\n            elif firstFilter[0] != \"\" and secondFilter[0] != \"\" and (thirdFilter[0] == \"\" or thirdFilter[0] == \",\"):\r\n                df1 = df[(df[orgColumn]==orgUnit[0]) & (df[firstColumn]==firstFilter[0]) & (df[secondColumn]==secondFilter[0])]   \r\n            #first filter not empty, second filter not empty, third filter not empty\r\n            else:\r\n                df1 = df[(df[orgColumn]==orgUnit[0]) & (df[firstColumn]==firstFilter[0]) & (df[secondColumn]==secondFilter[0]) & (df[thirdColumn]==thirdFilter[0])]\r\n                \r\n            if len(orgUnit) != 1:\r\n                x = 1\r\n                for unit in orgUnit:\r\n                    #first filter not empty, second filter empty, third filter empty\r\n                    if firstFilter[x] != \"\" and secondFilter[x] == \"\" and (thirdFilter[x] == \"\" or thirdFilter[x] == \",\"):\r\n                        df2 = df[(df[orgColumn]==orgUnit[x]) & (df[firstColumn]==firstFilter[x])]   \r\n                    #first filter empty, second filter not empty, third filter not empty\r\n                    elif firstFilter[x] == \"\" and secondFilter[x] != \"\" and thirdFilter[x] != \"\":\r\n                        df2 = df[(df[orgColumn]==orgUnit[x]) & (df[secondColumn]==secondFilter[x]) & (df[thirdColumn]==thirdFilter[x])]\r\n                    #first filter not empty, second filter empty, third filter not empty\r\n                    elif firstFilter[x] != \"\" and secondFilter[x] == \"\" and thirdFilter[x] != \"\":\r\n                        df2 = df[(df[orgColumn]==orgUnit[x]) & (df[firstColumn]==firstFilter[x]) & (df[thirdColumn]==thirdFilter[x])]             \r\n                    #first filter not empty, second filter not empty, third filter empty\r\n                    elif firstFilter[x] != \"\" and secondFilter[x] != \"\" and (thirdFilter[x] == \"\" or thirdFilter[x] == \",\"):\r\n                        df2 = df[(df[orgColumn]==orgUnit[x]) & (df[firstColumn]==firstFilter[x]) & (df[secondColumn]==secondFilter[x])]   \r\n                    #first filter not empty, second filter not empty, third filter not empty\r\n                    else:\r\n                        df2 = df[(df[orgColumn]==orgUnit[x]) & (df[firstColumn]==firstFilter[x]) & (df[secondColumn]==secondFilter[x]) & (df[thirdColumn]==thirdFilter[x])] \r\n                        \r\n                    df1 = df1.append(df2, ignore_index = True)\r\n                    x = x + 1\r\n                    if x == len(orgUnit):\r\n                        break\r\n                        \r\n            if len(reports) > 2:\r\n                if file == reports[2] or file == reports[3]:\r\n                    reportType = \"ss\"\r\n                else:\r\n                    reportType = \"fs\"    \r\n            else: \r\n                reportType = \"fs\"\r\n                \r\n            if file == reports[0]:\r\n                df1['Student Licenses and Authorisations Expiration Date'] = pd.to_datetime(df1['Student Licenses and Authorisations Expiration Date'], format='%d/%m/%Y').dt.date\r\n                df1['Certification Learning Item Start Date'] = pd.to_datetime(df1['Certification Learning Item Start Date'], format='%d/%m/%Y').dt.date\r\n            elif file == reports[1]:\r\n                df1['Student Curriculum Acquired On'] = pd.to_datetime(df1['Student Curriculum Acquired On'], format='%d/%m/%Y').dt.date\r\n                df1['Curricula Learning Item Start Date'] = pd.to_datetime(df1['Curricula Learning Item Start Date'], format='%d/%m/%Y').dt.date              \r\n                \r\n            if len(reports) == 4:\r\n                if file == reports[2]:\r\n                    df1['Student Licenses and Authorisations Expiration Date'] = pd.to_datetime(df1['Student Licenses and Authorisations Expiration Date'], format='%d/%m/%Y').dt.date \r\n                    df1['Certification Learning Item Start Date'] = pd.to_datetime(df1['Certification Learning Item Start Date'], format='%d/%m/%Y').dt.date\r\n                elif file == reports[3]:\r\n                    df1['Student Curriculum Acquired On'] = pd.to_datetime(df1['Student Curriculum Acquired On'], format='%d/%m/%Y').dt.date\r\n                    df1['Curricula Learning Item Start Date'] = pd.to_datetime(df1['Curricula Learning Item Start Date'], format='%d/%m/%Y').dt.date                 \r\n                    \r\n            newFile = fileLocation + reportType+' '+reportName+' '+sheetNames[o]+'.xlsx'\r\n            df1.to_excel(newFile, sheet_name=sheetNames[o])\r\n            o = o + 1\r\n            \r\n        #combine SS into FS\r\n        if report == \"fs|out\":\r\n            for  sheet in sheetNames:\r\n                ssWorkbookLocation = fileLocation +'ss '+reportName+' '+sheet+'.xlsx'\r\n                ssWorkbook = load_workbook(filename=ssWorkbookLocation,read_only=False)\r\n                ssWorksheet = ssWorkbook.active\r\n                ssRowCount = ssWorksheet.max_row + 1\r\n                \r\n                fsWorkbookLocation = fileLocation+ 'fs '+reportName+' '+sheet+'.xlsx'\r\n                fsWorkbook = load_workbook(filename=fsWorkbookLocation,read_only=False)\r\n                fsWorksheet = fsWorkbook.active\r\n                fsRow = fsWorksheet.max_row + 1            \r\n                \r\n                for rowSS in range(2,ssRowCount):\r\n                    fsWorksheet[\"A\"+str(fsRow)].value = ssWorksheet[\"A\"+str(rowSS)].value\r\n                    fsWorksheet[\"B\"+str(fsRow)].value = ssWorksheet[\"B\"+str(rowSS)].value\r\n                    fsWorksheet[\"C\"+str(fsRow)].value = ssWorksheet[\"C\"+str(rowSS)].value\r\n                    fsWorksheet[\"D\"+str(fsRow)].value = ssWorksheet[\"D\"+str(rowSS)].value\r\n                    fsWorksheet[\"E\"+str(fsRow)].value = ssWorksheet[\"E\"+str(rowSS)].value\r\n                    fsWorksheet[\"F\"+str(fsRow)].value = ssWorksheet[\"F\"+str(rowSS)].value\r\n                    fsWorksheet[\"G\"+str(fsRow)].value = ssWorksheet[\"G\"+str(rowSS)].value\r\n                    fsWorksheet[\"H\"+str(fsRow)].value = ssWorksheet[\"H\"+str(rowSS)].value\r\n                    fsWorksheet[\"I\"+str(fsRow)].value = ssWorksheet[\"I\"+str(rowSS)].value\r\n                    fsWorksheet[\"J\"+str(fsRow)].value = ssWorksheet[\"J\"+str(rowSS)].value\r\n                    fsWorksheet[\"K\"+str(fsRow)].value = ssWorksheet[\"K\"+str(rowSS)].value\r\n                    fsWorksheet[\"L\"+str(fsRow)].value = ssWorksheet[\"L\"+str(rowSS)].value\r\n                    fsWorksheet[\"M\"+str(fsRow)].value = ssWorksheet[\"M\"+str(rowSS)].value\r\n                    fsWorksheet[\"N\"+str(fsRow)].value = ssWorksheet[\"N\"+str(rowSS)].value\r\n                    fsWorksheet[\"O\"+str(fsRow)].value = ssWorksheet[\"O\"+str(rowSS)].value\r\n                    fsWorksheet[\"P\"+str(fsRow)].value = ssWorksheet[\"P\"+str(rowSS)].value\r\n                    fsWorksheet[\"Q\"+str(fsRow)].value = ssWorksheet[\"Q\"+str(rowSS)].value\r\n                    fsWorksheet[\"R\"+str(fsRow)].value = ssWorksheet[\"R\"+str(rowSS)].value\r\n                    fsWorksheet[\"S\"+str(fsRow)].value = ssWorksheet[\"S\"+str(rowSS)].value\r\n                    fsWorksheet[\"T\"+str(fsRow)].value = ssWorksheet[\"T\"+str(rowSS)].value\r\n                    fsWorksheet[\"U\"+str(fsRow)].value = ssWorksheet[\"U\"+str(rowSS)].value\r\n                    fsWorksheet[\"V\"+str(fsRow)].value = ssWorksheet[\"V\"+str(rowSS)].value\r\n                    fsRow = fsRow + 1\r\n                ssWorkbook.save(ssWorkbookLocation)\r\n                ssWorkbook.close()\r\n                fsWorkbook.save(fsWorkbookLocation)\r\n                fsWorkbook.close()   \r\n                \r\n                #delete the SS reports\r\n                os.remove(ssWorkbookLocation)       \r\n                \r\n        #combine into 1 main report\r\n        certificationReport = fileLocation+'fs '+reportName+' '+sheetNames[0]+'.xlsx'\r\n        curriculaReport = fileLocation+'fs '+reportName+' '+sheetNames[1]+'.xlsx' \r\n        newfileName = reportDate+' '+reportName+'.xlsx'\r\n        combinedReport = fileLocation+newfileName    \r\n        \r\n        wb1 = load_workbook(filename=curriculaReport)\r\n        ws1 = wb1.worksheets[0]\r\n        \r\n        wb2 = load_workbook(filename=certificationReport)\r\n        ws2 = wb2.create_sheet(ws1.title)\r\n        \r\n        for row1 in ws1:\r\n            for cell in row1:\r\n                ws2[cell.coordinate].value = cell.value\r\n        wb1.close()\r\n        wb2.save(combinedReport)\r\n        wb2.close()\r\n        \r\n        #delete the individual reports\r\n        os.remove(certificationReport)\r\n        os.remove(curriculaReport)\r\n        \r\n        #format the new report\r\n        highlight = NamedStyle(name=\"highlight\")\r\n        highlight.font = Font(bold=False, size=12)\r\n        bd = Side(style='thin', color=\"000000\")\r\n        highlight.fill = PatternFill(start_color=\"FFBCA1\", fill_type = \"solid\")\r\n        highlight.border = Border(left=bd, top=bd, right=bd, bottom=bd)\r\n        wb = load_workbook(filename=combinedReport,read_only=False)\r\n        ws = wb[sheetNames[0]] \r\n        ws.delete_cols(23, 1)\r\n        ws.delete_cols(21, 1)\r\n        ws.delete_cols(20, 1)\r\n        ws.delete_cols(19, 1)\r\n        ws.delete_cols(18, 1)\r\n        ws.delete_cols(16, 1)\r\n        #ws.delete_cols(15, 1)\r\n        ws.delete_cols(13, 1)\r\n        ws.delete_cols(12, 1)\r\n        ws.delete_cols(9, 1)\r\n        ws.delete_cols(6, 1)\r\n        ws.delete_cols(5, 1)\r\n        #ws.delete_cols(4, 1) #this is org name, 3 is manager name\r\n        ws.delete_cols(2, 1)\r\n        ws.delete_cols(1, 1)\r\n        wb.save(combinedReport)\r\n        ws.column_dimensions['A'].width = 20\r\n        ws[\"A1\"].value = \"Manager\"\r\n        ws[\"A1\"].style = highlight\r\n        ws.column_dimensions['B'].width = 10\r\n        ws[\"B1\"].value = \"Organisation Name - DELETE\"\r\n        ws[\"B1\"].style = highlight\r\n        ws.column_dimensions['C'].width = 10\r\n        ws[\"C1\"].value = \"Person No.\"\r\n        ws[\"C1\"].style = highlight\r\n        ws.column_dimensions['D'].width = 20\r\n        ws[\"D1\"].value = \"Full Name\"\r\n        ws[\"D1\"].style = highlight\r\n        ws.column_dimensions['E'].width = 15\r\n        ws[\"E1\"].value = \"Enrolment Date\"\r\n        ws[\"E1\"].style = highlight\r\n        ws.column_dimensions['F'].width = 15\r\n        ws[\"F1\"].value = \"Expiry Date\"\r\n        ws[\"F1\"].style = highlight\r\n        ws.column_dimensions['G'].width = 50\r\n        ws[\"G1\"].value = \"Certification\"\r\n        ws[\"G1\"].style = highlight\r\n        ws.column_dimensions['H'].width = 50\r\n        ws[\"H1\"].value = \"Certification Learning Item Status\"\r\n        ws[\"H1\"].style = highlight\r\n        ws.column_dimensions['I'].width = 30\r\n        ws[\"I1\"].value = \"Certification Learning Item Title\"\r\n        ws[\"I1\"].style = highlight\r\n        ws.column_dimensions['J'].width = 50\r\n        ws[\"J1\"].value = \"Exemption Status\"\r\n        ws[\"J1\"].style = highlight     \r\n        ws.column_dimensions['K'].width = 50\r\n        ws[\"K1\"].value = \"Explanation\"\r\n        ws[\"K1\"].style = highlight      \r\n        wb.save(combinedReport)\r\n        ws = wb[sheetNames[1]] \r\n        ws.delete_cols(20, 1)\r\n        ws.delete_cols(19, 1)\r\n        ws.delete_cols(18, 1)\r\n        ws.delete_cols(17, 1)\r\n        ws.delete_cols(12, 1)\r\n        ws.delete_cols(6, 1)\r\n        ws.delete_cols(5, 1)\r\n        #ws.delete_cols(4, 1) #this is org name, 3 is manager name\r\n        ws.delete_cols(2, 1)\r\n        ws.delete_cols(1, 1)\r\n        ws.column_dimensions['A'].width = 20\r\n        ws[\"A1\"].value = \"Manager\"\r\n        ws[\"A1\"].style = highlight\r\n        ws.column_dimensions['B'].width = 10\r\n        ws[\"B1\"].value = \"Organisation Name - DELETE\"\r\n        ws[\"B1\"].style = highlight\r\n        ws.column_dimensions['C'].width = 10\r\n        ws[\"C1\"].value = \"Person No.\"\r\n        ws[\"C1\"].style = highlight    \r\n        ws.column_dimensions['D'].width = 20\r\n        ws[\"D1\"].value = \"Full Name\"\r\n        ws[\"D1\"].style = highlight\r\n        ws.column_dimensions['E'].width = 20\r\n        ws[\"E1\"].value = \"Curriculum Status\"\r\n        ws[\"E1\"].style = highlight\r\n        ws.column_dimensions['F'].width = 15\r\n        ws[\"F1\"].value = \"Curriculum Acquired On\"\r\n        ws[\"F1\"].style = highlight\r\n        ws.column_dimensions['G'].width = 50\r\n        ws[\"G1\"].value = \"Curriculum Name\"\r\n        ws[\"G1\"].style = highlight\r\n        ws.column_dimensions['H'].width = 50\r\n        ws[\"H1\"].value = \"Curricula Learning Item Name\"\r\n        ws[\"H1\"].style = highlight\r\n        ws.column_dimensions['I'].width = 20\r\n        ws[\"I1\"].value = \"Curricula Learning Item Status\"\r\n        ws[\"I1\"].style = highlight\r\n        ws.column_dimensions['J'].width = 15\r\n        ws[\"J1\"].value = \"Curricula Learning Item Start Date\"\r\n        ws[\"J1\"].style = highlight\r\n        ws.column_dimensions['K'].width = 40\r\n        ws[\"K1\"].value = \"Curricula Learning Item Class ID\"\r\n        ws[\"K1\"].style = highlight\r\n        ws.column_dimensions['L'].width = 50\r\n        ws[\"L1\"].value = \"Explanation\"  \r\n        ws[\"L1\"].style = highlight     \r\n        \r\n        ws = wb[sheetNames[0]] \r\n        for rowS in range(1, ws.max_row):\r\n            ws[\"E\"+str(rowS)].number_format = 'dd/mm/yyyy'\r\n            ws[\"F\"+str(rowS)].number_format = 'dd/mm/yyyy'\r\n        ws = wb[sheetNames[1]] \r\n        for rowS in range(1, ws.max_row):\r\n            ws[\"F\"+str(rowS)].number_format = 'dd/mm/yyyy'\r\n            ws[\"J\"+str(rowS)].number_format = 'dd/mm/yyyy'    \r\n        wb.save(combinedReport)\r\n        wb.close()\r\n        \r\n        #mark group splits as Done\r\n        groupSplitWB = load_workbook(filename=groupSplits,read_only=False)\r\n        groupSplitWS = groupSplitWB.active\r\n        groupSplitWS[\"K\"+str(row)].value = \"Done\"\r\n        groupSplitWB.save(groupSplits)\r\n        groupSplitWB.close()\r\n        \r\n        finished = \"\"\r\n    else:\r\n        finished = \"All reports completed\"\r\n        newfileName = \"\"\r\n        folder = \"\"\r\n    return{\"combinedReport\":newfileName,\"folder\":folder,\"finished\":finished}"
  outputs:
    - combinedReport
    - folder
    - finished
  results:
    - SUCCESS
