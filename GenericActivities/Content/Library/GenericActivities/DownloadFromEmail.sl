namespace: GenericActivities
operation:
  name: DownloadFromEmail
  inputs:
    - accessToken
  python_action:
    use_jython: false
    script: "def execute(accessToken): \n    import requests\n    import json\n    import base64\n\n    emailSubjects = [\"Electrical Services, Workplace Inspections\",\"Operations Metro North, Workplace Inspections\",\"Operations Metro South, Workplace Inspections\",\"Operations Planning, Workplace Inspections\",\"Construction, ETS\",\"Regional North, Workplace Inspections\",\"Regional South, Workplace Inspections\",\"Electrical Services Field Observation\",\"Operations Metro North, Field Observation\",\"Operations Metro South, Field Observation\",\"Operations Planning, Field Observation\",\"Construction, Field Observation\",\"Regional North, Field Observation\",\"Regional South, Field Observation\"]\n    deleteResponse = \"\"\n    downloadResponse = \"\"\n    \n    for subject in emailSubjects:\n        #TO GET EMAIL\n        url = 'https://graph.microsoft.com/v1.0/users/svcrpabot@sapowernetworks.com.au/messages?$search=\"'+subject+'\"'\n        payload = {}\n        headers = {'Content-Type': 'application/json','SdkVersion': 'postman-graph/v1.0','Authorization': 'Bearer '+accessToken}\n        response = requests.request(\"GET\", url, headers=headers, data = payload)\n        json_data = json.loads(response.text)\n\n        for x in json_data['value']:\n            messageID = x['id']\n            break\n        \n        #TO GET ATTACHMENT\n        url = 'https://graph.microsoft.com/v1.0/users/svcrpabot@sapowernetworks.com.au/messages/' + messageID + '/attachments'\n        body = {}\n        head = {\"Authorization\": \"Bearer \" + accessToken}\n        responseCode = requests.request(\"GET\", url, headers=head, data = body)\n        result = responseCode.status_code\n        results = json.loads(responseCode.text.encode('utf8'))\n\n        downloadResponse = downloadResponse + \" \" + str(result)\n                \n        #SAVING THE ATTACHMENT\n        for file in results[\"value\"]:\n            imgdata = base64.b64decode(file[\"contentBytes\"])  \n            name = file[\"name\"]\n            filename = \"C:/Users/svcrpabot/OneDrive - SA Power Networks/Enablon Reports/\" + name\n            with open(filename, 'wb') as f:\n                f.write(imgdata)\n                \n            if name.find(\"Electrical Services, Workplace Inspections\") >= 0:\n                electricalWorkplace = name\n                break\n            if name.find(\"Operations Metro North, Workplace Inspections\") >= 0:\n                metroNorthWorkplace = name\n                break\n            if name.find(\"Operations Metro South, Workplace Inspections\") >= 0:\n                metroSouthWorkplace = name\n                break\n            if name.find(\"Operations Planning, Workplace Inspections\") >= 0:\n                opsPlanningWorkplace = name\n                break\n            if name.find(\"Construction, ETS\") >= 0:\n                metroOpsWorkplace = name  \n                break\n            if name.find(\"Regional North, Workplace Inspections\") >= 0:\n                regionalNorthWorkplace = name  \n                break\n            if name.find(\"Regional South, Workplace Inspections\") >= 0:\n                regionalSouthWorkplace = name  \n                break\n            if name.find(\"Electrical Services Field Observation\") >= 0:\n                electricalField = name\n                break\n            if name.find(\"Operations Metro North, Field Observation\") >= 0:\n                metroNorthField = name\n                break\n            if name.find(\"Operations Metro South, Field Observation\") >= 0:\n                metroSouthField = name\n                break\n            if name.find(\"Operations Planning, Field Observation\") >= 0:\n                opsPlanningField = name\n                break\n            if name.find(\"Projects & Construction, Field Observation\") >= 0:\n                metroOpsField = name  \n                break\n            if name.find(\"Regional North, Field Observation\") >= 0:\n                regionalNorthField = name  \n                break\n            if name.find(\"Regional South, Field Observation\") >= 0:\n                regionalSouthField = name  \n                break   \n\n        #DELETE EMAIL\n        if str(result) == \"200\":\n            url = \"https://graph.microsoft.com/v1.0/users/svcrpabot@sapowernetworks.com.au/messages/\"+messageID\n            payload = {}\n            headers = {'Authorization': 'Bearer '+accessToken}\n            delResponse = requests.request(\"DELETE\", url, headers=headers, data = payload)\n            delResult = delResponse.status_code    \n            \n            deleteResponse = deleteResponse + \" \" + str(delResult)\n\n    return{\"electricalWorkplace\":electricalWorkplace,\"metroNorthWorkplace\":metroNorthWorkplace,\"metroSouthWorkplace\":metroSouthWorkplace,\n    \"opsPlanningWorkplace\":opsPlanningWorkplace,\"metroOpsWorkplace\":metroOpsWorkplace,\"regionalNorthWorkplace\":regionalNorthWorkplace,\"regionalSouthWorkplace\":regionalSouthWorkplace,\n    \"electricalField\":electricalField,\"metroNorthField\":metroNorthField,\"metroSouthField\":metroSouthField,\"opsPlanningField\":opsPlanningField,\"metroOpsField\":metroOpsField,\n    \"regionalNorthField\":regionalNorthField,\"regionalSouthField\":regionalSouthField,\"deleteResponse\":deleteResponse,\"downloadResponse\":downloadResponse}"
  outputs:
    - electricalWorkplace
    - metroNorthWorkplace
    - metroSouthWorkplace
    - opsPlanningWorkplace
    - metroOpsWorkplace
    - regionalNorthWorkplace
    - regionalSouthWorkplace
    - electricalField
    - metroNorthField
    - metroSouthField
    - opsPlanningField
    - metroOpsField
    - regionalNorthField
    - regionalSouthField
    - deleteResponse
    - downloadResponse
  results:
    - SUCCESS
